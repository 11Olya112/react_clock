{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","date","Date","clockName","timerId","this","window","setInterval","console","info","setState","prevState","debug","clearInterval","timeString","toLocaleTimeString","className","Component","App","hasClock","document","addEventListener","event","preventDefault","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAOA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,UAAWV,KAHf,EAMEW,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMN,EAAO,IAAIC,KAEjBM,QAAQC,KAAKR,GACb,EAAKS,SAAS,CAAET,WACf,KAEHK,OAAOC,aAAY,WACjB,EAAKG,SAAS,CAAEP,UAAWV,QAC1B,QAlBP,gCAqBE,SAAmBkB,GACjB,IAAQR,EAAcE,KAAKL,MAAnBG,UAEJA,IAAcQ,EAAUR,WAE1BK,QAAQI,MAAR,uBAA8BD,EAAUR,UAAxC,eAAwDA,MA1B9D,kCA8BE,WACEU,cAAcR,KAAKD,WA/BvB,oBAkCE,WACE,IACMU,EADWT,KAAKL,MAAdC,KACgBc,qBAExB,OACE,mCACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKL,MAAMG,YAGb,YAED,sBAAMa,UAAU,cAAhB,SACGF,aAhDb,GAA2BG,aCLdC,EAAb,4MACElB,MAAyB,CACvBmB,UAAU,GAFd,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKb,SAAS,CAAES,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKX,SAAS,CAAES,UAAU,SAZhC,kCAgBE,WACEC,SAASI,oBAAoB,eAAe,eAC5CJ,SAASI,oBAAoB,SAAS,iBAlB1C,oBAqBE,WACE,IAAQL,EAAad,KAAKL,MAAlBmB,SAER,OACE,sBAAKH,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,WA3BrB,GAAyBM,IAAMR,WCL/BS,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.e241ebcf.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date;\n  clockName: any;\n};\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport class Clock extends Component<{}, State> {\n  state = {\n    date: new Date(),\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n      // eslint-disable-next-line\n      console.info(date);\n      this.setState({ date });\n    }, 1000);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(prevState: State) {\n    const { clockName } = this.state;\n\n    if (clockName !== prevState.clockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <>\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {this.state.clockName}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {timeString}\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', () => {});\n    document.removeEventListener('click', () => {});\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock />}\n      </div>\n\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}